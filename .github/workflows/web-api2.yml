# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy to VPS

on:
  workflow_dispatch:

jobs:

  deploy:
    runs-on: ubuntu-latest

    env:
      projectPath: AoE2DELobbyBrowser.WebApi/AoE2DELobbyBrowser.WebApi.csproj
      projectDir: AoE2DELobbyBrowser.WebApi
      
    steps:
      # - uses: actions/checkout@v4

      # - name: Set up .NET Core
      #   uses: actions/setup-dotnet@v4
      #   with:
      #     dotnet-version: '9.0.x'

      # build and publish    
      # - name: Build and publish
      #   run: dotnet publish "$projectDir/AoE2DELobbyBrowser.WebApi.csproj" -c Release -o "$projectDir/publish" -r linux-x64
    
      # https://stackoverflow.com/questions/50277495/how-to-run-an-ansible-playbook-with-a-passphrase-protected-ssh-private-key/69016014#69016014
      - name: Configure SSH1
        run: |
          mkdir -p ~/.ssh/
          chmod 700 ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
              HostName $SSH_HOST
              User $SSH_USER
              IdentityFile ~/.ssh/staging.key
              StrictHostKeyChecking no
          END
          printf '#!/bin/sh\necho "$SSH_PASSPHRASE"\n' > ~/.ssh/askpass.sh 
          chmod +x ~/.ssh/askpass.sh
          eval $(ssh-agent)
          ls ~/.ssh
        env:
          SSH_USER: ${{ secrets.SERVER_USERNAME }}
          SSH_KEY: ${{ secrets.SERVER_KEY }}
          SSH_HOST: ${{ secrets.SERVER_HOST }}
          SSH_PASSPHRASE: ${{ secrets.SERVER_PASSPHRASE }}
      
      - name: Configure SSH
        run: |
          SSH_ASKPASS_REQUIRE=force SSH_ASKPASS=~/.ssh/askpass.sh ssh-add "~/.ssh/staging.key"
          ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
        env:
          SSH_USER: ${{ secrets.SERVER_USERNAME }}
          SSH_KEY: ${{ secrets.SERVER_KEY }}
          SSH_HOST: ${{ secrets.SERVER_HOST }}
          SSH_PASSPHRASE: ${{ secrets.SERVER_PASSPHRASE }}

      # Remove shh file
      # - name: test
      #   run: |
      #     cat ~/.ssh/known_hosts
      #     cat ~/.ssh/tmp
      #     cat ~/.ssh/staging.key
      #     ls ~/.ssh
      #     ssh staging "docker container stop aoe2deapi"
      - name: known_hosts
        run: cat ~/.ssh/known_hosts
      - name: tmp
        run: cat ~/.ssh/tmp
      - name: staging
        run: cat ~/.ssh/staging.key    
      - name: ls
        run: ls ~/.ssh 
      - name: docker
        run: ssh staging "docker container stop aoe2deapi"
      # Stop container
      # - name: Stop container
      #   uses: appleboy/ssh-action@v1.2.0
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     key: ${{ secrets.SERVER_KEY }}
      #     passphrase: ${{ secrets.SERVER_PASSPHRASE }}
      #     script: docker container stop aoe2deapi

      # Transfer Dockerfile
      # - name: Copy Dockerfile
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     key: ${{ secrets.SERVER_KEY }}
      #     passphrase: ${{ secrets.SERVER_PASSPHRASE }}
      #     source: "$projectDir/Dockerfile"
      #     target: "/home/tmk/apps/aoe2deapi"

      # Transfer publish folder
      # - name: Transfer publish folder
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     key: ${{ secrets.SERVER_KEY }}
      #     passphrase: ${{ secrets.SERVER_PASSPHRASE }}
      #     source: "$projectDir/publish/*"
      #     target: "/home/tmk/apps/aoe2deapi/publish"
      #     rm: true
      # Start container
      # - name: Stop container
      #   uses: appleboy/ssh-action@v1.2.0
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     key: ${{ secrets.SERVER_KEY }}
      #     passphrase: ${{ secrets.SERVER_PASSPHRASE }}
      #     script: docker run -d -p 5100:8080 -e ASPNETCORE_URLS="http://*:8080" --name aoe2deapi aoe2delobbybrowser

      # Remove shh file
      - name: Remove ssh files
        run: |
          rm ~/.ssh/staging.key

